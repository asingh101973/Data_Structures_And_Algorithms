// https://leetcode.com/problems/two-sum/description/

Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].

* Brute Force😍
        for (int i = 0; i < n - 1; i++) {
            for (int j = i + 1; j < n; j++) {
                if (nums[i] + nums[j] == target) {
                    return new int[]{i, j};
                }
            }
        }
        return new int[]{}; // No solution found
====================================================================================================================
  * HashMap
  
  class Solution {
    public int[] twoSum(int[] nums, int target) {
        int res[] =new int[2];
        
        HashMap<Integer, Integer> hs = new HashMap<Integer, Integer>();
        for(int i = 0; i<nums.length; i++)
        {
            if(hs.containsKey(target - nums[i]))
            {
                res[0] = i;
                res[1] = hs.get(target - nums[i]);
                return res;
            }
            hs.put(nums[i], i);
        }
        
       return res;
    }
}
